/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.deepin.Manual.Open.xml -a manual_open_adapter -c ManualOpenAdapter
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "manual_open_adapter.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ManualOpenAdapter
 */

ManualOpenAdapter::ManualOpenAdapter(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ManualOpenAdapter::~ManualOpenAdapter()
{
    // destructor
}

void ManualOpenAdapter::FilesUpdate(const QStringList &filesList)
{
    // handle method call local.ManualOpenProxy.FilesUpdate
    QMetaObject::invokeMethod(parent(), "FilesUpdate", Q_ARG(QStringList, filesList));
}

void ManualOpenAdapter::Open(const QString &app_name)
{
    // handle method call local.ManualOpenProxy.Open
    QMetaObject::invokeMethod(parent(), "Open", Q_ARG(QString, app_name));
}

void ManualOpenAdapter::OpenTitle(const QString &app_name, const QString &title_name)
{
    // handle method call local.ManualOpenProxy.OpenTitle
    QMetaObject::invokeMethod(parent(), "OpenTitle", Q_ARG(QString, app_name), Q_ARG(QString, title_name));
}

void ManualOpenAdapter::Search(const QString &keyword)
{
    // handle method call local.ManualOpenProxy.Search
    QMetaObject::invokeMethod(parent(), "Search", Q_ARG(QString, keyword));
}

void ManualOpenAdapter::ShowManual(const QString &app_name)
{
    // handle method call local.ManualOpenProxy.ShowManual
    QMetaObject::invokeMethod(parent(), "ShowManual", Q_ARG(QString, app_name));
}

